################################################################################
# This file is AUTOGENERATED with <https://github.com/sapcc/go-makefile-maker> #
# Edit Makefile.maker.yaml instead.                                            #
################################################################################

# Copyright 2024 SAP SE
# SPDX-License-Identifier: Apache-2.0

name: Container Registry GHCR
"on":
  push:
    branches:
      - master
    paths:
      - cmd/**
      - pkg/**
      - Dockerfile
      - go.mod
      - go.sum
    tags:
      - v*.*.*
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    name: Push container to ghcr.io
    runs-on: [ ubuntu-latest ]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.actor }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            # https://github.com/docker/metadata-action#typeedge
            type=edge,branch=main
            # https://github.com/docker/metadata-action#latest-tag
            type=raw,value=latest,enable={{is_default_branch}}
            # https://github.com/docker/metadata-action#typesemver
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }},prefix=v
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=schedule
            type=raw,value=${{ github.sha }}
            type=sha,enable=true,format=short,prefix=
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          platforms: |
            linux/amd64
            linux/arm64

  vulnerability-scan:
    permissions:
      contents: read
      packages: read
      security-events: write
    name: Vulnerability Scan
    needs: build-and-push-image
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        if: success()
        with:
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3
        with:
          sarif_file: trivy-results.sarif
